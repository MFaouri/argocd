db:
  name: catalog?timeout=5s
  endpoint: catalog-mysql:3306
  readEndpoint: catalog-mysql:3306

deployment:
  replicaCount: 1
  image:
    repository: public.ecr.aws/aws-containers/retail-store-sample-catalog
    tag: latest
    pullPolicy: IfNotPresent

  serviceAccount:
    create: true
    name: catalog

  resources:
    limits:
      cpu: "250m"
      memory: "512Mi"
    requests:
      cpu: "250m"
      memory: "512Mi"

namespace:
  name: catalog
  createdBy: eks-workshop

database:
  username: "catalog_user"
  password: "default_password"

service:
  metadata:
    name: catalog
    labels:
      app.kubernetes.io/created-by: eks-workshop
  spec:
    type: ClusterIP
    ports:
      - port: 80
        targetPort: http
        protocol: TCP
        name: http
    selector:
      app.kubernetes.io/name: catalog
      app.kubernetes.io/instance: catalog
      app.kubernetes.io/component: service

serviceAccount:
  name: catalog


service-mysql:
  appName: catalog
  appInstance: catalog
  serviceName: catalog-mysql
  serviceType: ClusterIP
  port: 3306

statefulset_mysql:
  app:
    name: catalog
    instance: catalog-mysql

statefulSet:
  name: catalog-mysql
  replicas: 1
  persistentVolumeClaim:
    enabled: true
    name: catalog-mysql-data

secrets:
  mysqlSecretName: catalog-mysql-root
  catalogDbSecretName: catalog-db

mysql:
  image: "public.ecr.aws/docker/library/mysql:5.7"
  imagePullPolicy: IfNotPresent
  databaseName: catalog
